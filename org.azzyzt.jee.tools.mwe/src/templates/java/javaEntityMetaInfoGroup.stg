<!
 * Copyright (c) 2011, Municipiality of Vienna, Austria
 *
 * Licensed under the EUPL, Version 1.1 or – as soon they
 * will be approved by the European Commission - subsequent
 * versions of the EUPL (the "Licence");
 * You may not use this work except in compliance with the
 * Licence.
 * 
 * For convenience a plain text copy of the English version 
 * of the Licence can be found in the file LICENCE.txt in
 * the top-level directory of this software distribution.
 * 
 * You may obtain a copy of the Licence in any of 22 European
 * Languages at:
 *
 * http://www.osor.eu/eupl
 *
 * Unless required by applicable law or agreed to in
 * writing, software distributed under the Licence is
 * distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied.
 * See the Licence for the specific language governing
 * permissions and limitations under the Licence.
 !>

<!
 * Code generation makes use of and bundles a copy of StringTemplate, 
 * which is
 * 
 * Copyright (c) 2008, Terence Parr
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or 
 * without modification, are permitted provided that the 
 * following conditions are met:
 * 
 * Redistributions of source code must retain the above copyright 
 * notice, this list of conditions and the following disclaimer.
 * 
 * Redistributions in binary form must reproduce the above copyright 
 * notice, this list of conditions and the following disclaimer in 
 * the documentation and/or other materials provided with the distribution.
 * 
 * Neither the name of the author nor the names of its contributors 
 * may be used to endorse or promote products derived from this software 
 * without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
 * POSSIBILITY OF SUCH DAMAGE.
 !>

group javaEntityMetaInfoGroup : javaGroup;

@javaClass.extra_constructors() ::= <<
static {

    Set\<String\> fields;
    Map\<String, Class\<?\>\> types;
    AssociationInfo associationInfo;
    Map\<String, AssociationInfo\> associationInfos;
    <mdt.fields:create_entity_field_info()>
}

>>

@javaClass.extra_methods() ::= <<
@EJB ValidAssociationPaths validAssociationPaths;

@Override
public ValidAssociactionPathsInterface getValidPaths() {
    return validAssociationPaths;
}

>>

create_entity_field_info() ::= <<

///////////////////////////////////////////////////
// <attr.fieldType.simpleName>
fields = new HashSet\<String\>();
fieldsByClass.put(<attr.fieldType.simpleName>.class, fields);

<attr.fieldType.fields:add_entity_field()>
types = new HashMap\<String, Class\<?\>\>();
fieldsTypesByClassAndName.put(<attr.fieldType.simpleName>.class, types);

<attr.fieldType.fields:add_entity_field_type()>
associationInfos = new HashMap\<String, AssociationInfo\>();
associationsByClassAndPath.put(<attr.fieldType.simpleName>.class, associationInfos);

<attr.fieldType.fields:add_entity_association_info()>
>>

add_entity_field() ::= <<
<if(attr.fieldType.implicitlyImported)>fields.add("<attr.name>");

<endif>
>>

add_entity_field_type() ::= <<
<if(attr.fieldType.implicitlyImported)>types.put("<attr.name>", <attr.fieldType.fqName>.class);

<endif>
>>

add_entity_association_info() ::= <<
<if(attr.associationEndpoint)>associationInfo = new AssociationInfo(
        "<attr.name>", 
        RequiredSelectionType.<attr.associationEndpoint.requiredSelectionType>, 
        <attr.ownerMdt.simpleName>.class, 
        <attr.associationEndpoint.targetEntity.simpleName>.class, 
        JoinType.<attr.associationEndpoint.joinType>
);
associationInfos.put("<attr.name>", associationInfo);
        

<endif>
>>

